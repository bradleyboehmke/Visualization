ggtitle("Default dodge positioning") +
theme(legend.position = "none")
p2 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = position_dodge(width = .5)) +
ggtitle("Greater overlap of comparison bars") +
theme(legend.position = "none")
p3 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = position_dodge(width = 1)) +
ggtitle("Greater spacing between comparison bars") +
labs(fill = "AM") +
theme(legend.position = c(1,1), legend.justification = c(1,1),
legend.background = element_blank())
grid.arrange(p1, p2, p3, ncol = 3)
proportion <- mtcars %>%
group_by(cyl, am) %>%
tally() %>%
group_by(cyl) %>%
mutate(pct = n / sum(n))
ggplot(proportion, aes(factor(cyl), pct, fill = factor(am, levels = c(1, 0)))) +
geom_bar(stat = "identity", color = "grey40") +
scale_fill_manual(values = c("#a1d99b", "#31a354")) +
labs(fill = "AM")
mtcars %>%
group_by(cyl, am) %>%
tally() %>%
group_by(cyl) %>%
mutate(pct = n / sum(n))
ggplot(mtcars, aes(reorder(row.names(mtcars), mpg), mpg)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = mpg), nudge_y = 1)
ggplot(mtcars, aes(reorder(row.names(mtcars), mpg), mpg)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = mpg), nudge_y = -1, color = "white")
mtcars %>%
mutate(Make = row.names(mtcars),
ID = ifelse(Make == "Fiat X1-9", TRUE, FALSE))
ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(mpg, 1)), position = position_dodge(0.9),
vjust = 1.5, color = "white")
ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(mpg, 1)), position = position_dodge(0.9),
color = "white")
ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(mpg, 1)), position = position_dodge(0.9),
vjust = 1.5, color = "white") +
ggtitle("Fig B: Adjusted text alignment")
ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(mpg, 1)), position = position_dodge(0.9),
vjust = 1.5, color = "white") +
ggtitle("Fig B: Adjusted text alignment")
proportion <- proportion %>%
group_by(cyl) %>%
mutate(label_y = cumsum(pct))
ggplot(proportion, aes(factor(cyl), pct, fill = factor(am, levels = c(1, 0)))) +
geom_bar(stat = "identity", color = "grey40") +
geom_text(aes(label = round(pct, 2), y = label_y), vjust = 1.5, color = "white") +
scale_fill_manual(values = c("#a1d99b", "#31a354")) +
labs(fill = "AM")
proportion
library(xlsx)
library(dplyr)
library(tidyr)
library(ggplot2)
library(magrittr)
library(gridExtra)
income <- read.xlsx("Data/PEW Middle Class Data.xlsx",
sheetIndex = "1. Distribution, metro",
startRow = 10, colIndex = c(1:4, 6:8)) %>%
set_colnames(c("Metro", "Lower_00", "Middle_00", "Upper_00", "Lower_14",
"Middle_14", "Upper_14")) %>%
filter(Metro != "NA")
income %>%
filter(Metro == "Dayton, OH") %>%
gather(metric, value, -Metro) %>%
separate(metric, into = c("class", "year")) %>%
mutate(year = ifelse(year == "00", 2000, 2014),
value = value/100,
y_label = paste0(round(value*100, 1), "%"))
dayton <- income %>%
filter(Metro == "Dayton, OH") %>%
gather(metric, value, -Metro) %>%
separate(metric, into = c("class", "year")) %>%
mutate(year = ifelse(year == "00", 2000, 2014),
value = value/100,
y_label = paste0(round(value*100, 1), "%"))
ggplot(dayton, aes(x = class, y = value, fill = factor(year))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
geom_text(aes(label = y_label), position = position_dodge(0.9),
vjust = 1.5, color = "white", family = "Georgia") +
scale_fill_manual(values = c("#a1d99b", "#31a354")) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(labels = c("Lower" = "Lower Class",
"Middle" = "Middle Class", "Upper" = "Upper Class")) +
labs(title = "Distribution of Adults by Income in Dayton, OH",
subtitle = "The percentage of adults in the middle class eroded by 5.3% from 2000 to 2014. Although a small \nfraction of these individuals moved into the upper class (+0.5%), the majority of these middle class \nindividuals moved into the lower income class (+4.8%).",
caption = "Source: Pew Research Center analysis of the \n2000 decennial census and 2014 American \nCommunity Survey (IPUMS)") +
theme_minimal() +
theme(axis.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(1,1), legend.justification = c(1,1),
legend.background = element_blank(),
legend.direction="horizontal",
legend.title = element_blank(),
text = element_text(family = "Georgia"),
plot.title = element_text(size = 20, margin = margin(b = 10)),
plot.subtitle = element_text(size = 12, color = "darkslategrey", margin = margin(b = 25)),
plot.caption = element_text(size = 8, margin = margin(t = 10), color = "grey70", hjust = 0))
# Chunk 1
library(xlsx)           # for reading in Excel data
library(dplyr)          # for data manipulation
library(tidyr)          # for data manipulation
library(magrittr)       # for easier syntax in one or two areas
library(gridExtra)      # for generating some comparison plots
library(ggplot2)        # for generating the visualizations
# Chunk 2
# read in PEW data
income <- read.xlsx("Data/PEW Middle Class Data.xlsx",
sheetIndex = "1. Distribution, metro",
startRow = 10, colIndex = c(1:4, 6:8)) %>%
set_colnames(c("Metro", "Lower_00", "Middle_00", "Upper_00", "Lower_14",
"Middle_14", "Upper_14")) %>%
filter(Metro != "NA")
head(income)
# Chunk 3
theme_update(plot.background = element_rect(fill = "#fdfdfd"),
legend.background = element_blank())
# Chunk 4
head(mtcars)
# Chunk 5
library(ggplot2)
library(gridExtra)
# x-axis as continuous
p1 <- ggplot(mtcars, aes(x = cyl)) +
geom_bar() +
ggtitle("Fig. A: x-axis as a continuous variable")
# x-axis as categorical
p2 <- ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar() +
ggtitle("Fig B: x-axis as a categorical (factor) variable")
grid.arrange(p1, p2, ncol = 2)
# Chunk 6
library(dplyr)
cyl_mpg <- mtcars %>%
group_by(cyl) %>%
summarise(avg_mpg = mean(mpg, na.rm = TRUE))
ggplot(cyl_mpg, aes(x = factor(cyl), y = avg_mpg)) +
geom_bar(stat = "identity")
# Chunk 7
p1 <- ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar(width = .5) +
ggtitle("bar width = 0.5")
p2 <- ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar(width = .75) +
ggtitle("bar width = 0.75")
p3 <- ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar(width = .9) +
ggtitle("bar width = 0.9")
p4 <- ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar(width = .99) +
ggtitle("bar width = 0.99")
grid.arrange(p1, p2, p3, p4, ncol = 4)
# Chunk 8
ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar(fill = "dodgerblue", color = "grey40", alpha = .5)
# Chunk 9
p1 <- ggplot(mtcars, aes(x = row.names(mtcars), y = mpg)) +
geom_bar(stat = "identity") +
ggtitle("Fig. A: Default x-axis")
p2 <- ggplot(mtcars, aes(x = row.names(mtcars), y = mpg)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
ggtitle("Fig. B: Rotated x-axis")
grid.arrange(p1, p2, ncol = 1)
# Chunk 10
# rotate to make more readable
p1 <- ggplot(mtcars, aes(x = row.names(mtcars), mpg)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Fig. A: Default rotated x-axis")
# order bars
p2 <- ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Fig. B: Rotated ordered x-axis")
grid.arrange(p1, p2, ncol = 2)
# Chunk 11
# compare mpg across all cars and color based on cyl
p1 <- ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
ggtitle("Fig. A: Default fill colors")
p2 <- ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
scale_fill_manual(values = c("#e5f5e0", "#a1d99b", "#31a354")) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
ggtitle("Fig. B: Manually set fill colors")
grid.arrange(p1, p2, ncol = 2)
# Chunk 12
library(dplyr)
avg_mpg <- mtcars %>%
group_by(cyl, am) %>%
summarise(mpg = mean(mpg, na.rm = TRUE))
avg_mpg
p1 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Default color comparison")
# more pleasing colors
p2 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
scale_fill_brewer(palette = "Pastel1") +
ggtitle("Adjusted color comparison")
grid.arrange(p1, p2, ncol = 2)
# Chunk 13
p1 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Default dodge positioning") +
theme(legend.position = "none")
p2 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = position_dodge(width = .5)) +
ggtitle("Overlap of side-by-side bars") +
theme(legend.position = "none")
p3 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = position_dodge(width = 1)) +
ggtitle("Spacing between side-by-side bars") +
labs(fill = "AM") +
theme(legend.position = c(1,1), legend.justification = c(1,1),
legend.background = element_blank())
grid.arrange(p1, p2, p3, ncol = 3)
# Chunk 14
ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity")
# Chunk 15
# Reverse legend color coding layout
p1 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE)) +
labs(fill = "am") +
ggtitle("Fig A: Reverse legend")
# or reverse stacking order by changing the factor levels
p2 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am, levels = c(1, 0)))) +
geom_bar(stat = "identity") +
labs(fill = "am") +
ggtitle("Fig B: Specify levels")
grid.arrange(p1, p2, ncol = 2)
# Chunk 16
ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am, levels = c(1, 0)))) +
geom_bar(stat = "identity", color = "grey40") +
scale_fill_manual(values = c("#a1d99b", "#31a354")) +
labs(fill = "AM")
# Chunk 17
# calculate percentages of each cyl & am category
proportion <- mtcars %>%
group_by(cyl, am) %>%
tally() %>%
group_by(cyl) %>%
mutate(pct = n / sum(n))
proportion
# create proportional stacked bars
ggplot(proportion, aes(factor(cyl), pct, fill = factor(am, levels = c(1, 0)))) +
geom_bar(stat = "identity", color = "grey40") +
scale_fill_manual(values = c("#a1d99b", "#31a354")) +
labs(fill = "AM")
# Chunk 18
p1 <- ggplot(mtcars, aes(reorder(row.names(mtcars), mpg), mpg)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = mpg), nudge_y = 2)
p2 <- ggplot(mtcars, aes(reorder(row.names(mtcars), mpg), mpg)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = mpg), nudge_y = -2, color = "white")
grid.arrange(p1, p2, ncol = 2)
# Chunk 19
cars <- mtcars %>%
mutate(Make = row.names(mtcars),
ID = ifelse(Make == "Fiat X1-9", TRUE, FALSE))
ggplot(cars, aes(reorder(Make, mpg), mpg, fill = ID)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(values = c("grey90", "dodgerblue")) +
annotate("text", x = "Fiat X1-9", y = 22, label = "mpg = 27.3", color = "white") +
theme_minimal() +
theme(legend.position = "none")
# Chunk 20
p1 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(mpg, 1)), position = position_dodge(0.9)) +
ggtitle("Fig A: Default text alignment")
p2 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(mpg, 1)), position = position_dodge(0.9),
vjust = 1.5, color = "white") +
ggtitle("Fig B: Adjusted text alignment")
grid.arrange(p1, p2, ncol = 2)
# Chunk 21
# create label location for each proportional bar
proportion <- proportion %>%
group_by(cyl) %>%
mutate(label_y = cumsum(pct))
ggplot(proportion, aes(factor(cyl), pct, fill = factor(am, levels = c(1, 0)))) +
geom_bar(stat = "identity", color = "grey40") +
geom_text(aes(label = round(pct, 2), y = label_y), vjust = 1.5, color = "white") +
scale_fill_manual(values = c("#a1d99b", "#31a354")) +
labs(fill = "AM")
dayton <- income %>%
filter(Metro == "Dayton, OH") %>%
gather(metric, value, -Metro) %>%
separate(metric, into = c("class", "year")) %>%
mutate(year = ifelse(year == "00", 2000, 2014),
value = value/100,
y_label = paste0(round(value*100, 1), "%"))
dayton
income %>%
filter(Metro == "Dayton, OH") %>%
gather(metric, value, -Metro) %>%
separate(metric, into = c("class", "year")) %>%
mutate(year = ifelse(year == "00", 2000, 2014),
value = value/100
)
ggplot(dayton, aes(x = class, y = value, fill = factor(year))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
geom_text(aes(label = y_label), position = position_dodge(0.9),
vjust = 1.5, color = "white", family = "Georgia") +
scale_fill_manual(values = c("#a1d99b", "#31a354")) +
scale_y_continuous(labels = scales::percent)
ggplot(dayton, aes(x = class, y = value, fill = factor(year))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
geom_text(aes(label = y_label), position = position_dodge(0.9),
vjust = 1.5, color = "white", family = "Georgia")
ggplot(dayton, aes(x = class, y = value, fill = factor(year))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
geom_text(aes(label = y_label), position = position_dodge(0.9),
vjust = 1.5, color = "white", family = "Georgia") +
scale_fill_manual(values = c("#a1d99b", "#31a354"))
ggplot(dayton, aes(x = class, y = value, fill = factor(year))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
geom_text(aes(label = y_label), position = position_dodge(0.9),
vjust = 1.5, color = "white", family = "Georgia") +
scale_fill_manual(values = c("#a1d99b", "#31a354"))
plot +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(labels = c("Lower" = "Lower Class",
"Middle" = "Middle Class", "Upper" = "Upper Class")) +
labs(title = "Distribution of Adults by Income in Dayton, OH",
subtitle = "The percentage of adults in the middle class eroded by 5.3% from 2000 to 2014. Although a small \nfraction of these individuals moved into the upper class (+0.5%), the majority of these middle class \nindividuals moved into the lower income class (+4.8%).",
caption = "Source: Pew Research Center analysis of the \n2000 decennial census and 2014 American \nCommunity Survey (IPUMS)")
plot <- ggplot(dayton, aes(x = class, y = value, fill = factor(year))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
geom_text(aes(label = y_label), position = position_dodge(0.9),
vjust = 1.5, color = "white", family = "Georgia") +
scale_fill_manual(values = c("#a1d99b", "#31a354"))
plot
plot +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(labels = c("Lower" = "Lower Class",
"Middle" = "Middle Class", "Upper" = "Upper Class")) +
labs(title = "Distribution of Adults by Income in Dayton, OH",
subtitle = "The percentage of adults in the middle class eroded by 5.3% from 2000 to 2014. Although a small \nfraction of these individuals moved into the upper class (+0.5%), the majority of these middle class \nindividuals moved into the lower income class (+4.8%).",
caption = "Source: Pew Research Center analysis of the \n2000 decennial census and 2014 American \nCommunity Survey (IPUMS)")
dayton <- income %>%
filter(Metro == "Dayton, OH") %>%
gather(metric, value, -Metro) %>%
separate(metric, into = c("class", "year")) %>%
mutate(year = ifelse(year == "00", 2000, 2014),
value = value/100)
dayton
plot <- ggplot(dayton, aes(x = class, y = value, fill = factor(year))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
geom_text(aes(label = y_label), position = position_dodge(0.9),
vjust = 1.5, color = "white", family = "Georgia") +
scale_fill_manual(values = c("#a1d99b", "#31a354"))
plot
plot <- ggplot(dayton, aes(x = class, y = value, fill = factor(year))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40")
scale_fill_manual(values = c("#a1d99b", "#31a354"))
plot
dayton <- income %>%
filter(Metro == "Dayton, OH") %>%
gather(metric, value, -Metro) %>%
separate(metric, into = c("class", "year")) %>%
mutate(year = ifelse(year == "00", 2000, 2014),
value = value/100)
dayton
plot <- ggplot(dayton, aes(x = class, y = value, fill = factor(year))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40")
scale_fill_manual(values = c("#a1d99b", "#31a354"))
plot
dayton <- dayton %>%
mutate(y_label = paste0(round(value*100, 1), "%"))
dayton
plot <- plot +
geom_text(aes(label = y_label), position = position_dodge(0.9),
vjust = 1.5, color = "white", family = "Georgia")
plot
dayton <- dayton %>%
mutate(y_label = paste0(round(value*100, 1), "%"))
dayton
plot <- ggplot(dayton, aes(x = class, y = value, fill = factor(year))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40")
scale_fill_manual(values = c("#a1d99b", "#31a354")) +
geom_text(aes(label = y_label), position = position_dodge(0.9),
vjust = 1.5, color = "white", family = "Georgia")
plot
dayton <- income %>%
filter(Metro == "Dayton, OH") %>%
gather(metric, value, -Metro) %>%
separate(metric, into = c("class", "year")) %>%
mutate(year = ifelse(year == "00", 2000, 2014),
value = value/100)
dayton
plot <- ggplot(dayton, aes(x = class, y = value, fill = factor(year))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40")
scale_fill_manual(values = c("#a1d99b", "#31a354"))
plot
dayton <- dayton %>%
mutate(y_label = paste0(round(value*100, 1), "%"))
dayton
plot <- ggplot(dayton, aes(x = class, y = value, fill = factor(year))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40")
scale_fill_manual(values = c("#a1d99b", "#31a354")) +
geom_text(aes(label = y_label), position = position_dodge(0.9),
vjust = 1.5, color = "white", family = "Georgia")
plot
dayton <- dayton %>%
mutate(y_label = paste0(round(value*100, 1), "%"))
dayton
plot <- ggplot(dayton, aes(x = class, y = value, fill = factor(year))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
scale_fill_manual(values = c("#a1d99b", "#31a354")) +
geom_text(aes(label = y_label), position = position_dodge(0.9),
vjust = 1.5, color = "white", family = "Georgia")
plot
plot +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(labels = c("Lower" = "Lower Class",
"Middle" = "Middle Class", "Upper" = "Upper Class")) +
labs(title = "Distribution of Adults by Income in Dayton, OH",
subtitle = "The percentage of adults in the middle class eroded by 5.3% from 2000 to 2014. Although a small \nfraction of these individuals moved into the upper class (+0.5%), the majority of these middle class \nindividuals moved into the lower income class (+4.8%).",
caption = "Source: Pew Research Center analysis of the \n2000 decennial census and 2014 American \nCommunity Survey (IPUMS)")
plot +
theme_minimal() +
theme(axis.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(1,1), legend.justification = c(1,1),
legend.background = element_blank(),
legend.direction="horizontal",
legend.title = element_blank(),
text = element_text(family = "Georgia"),
plot.title = element_text(size = 20, margin = margin(b = 10)),
plot.subtitle = element_text(size = 12, color = "darkslategrey", margin = margin(b = 25)),
plot.caption = element_text(size = 8, margin = margin(t = 10), color = "grey70", hjust = 0))
?plot.background
??plot.background
random <- data.frame(x = 1:5, y = 5:1)
ggplot(random, aes(x, y)) +
geom_bar(stat = "identity", color = "#EEEEEE") +
theme_minimal() +
theme(plot.background = element_rect(fill = "#EEEEEE", color = "#EEEEEE"),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(random, aes(x, y)) +
geom_bar(stat = "identity", color = "#fdfdfd") +
theme_minimal() +
theme(plot.background = element_rect(fill = "#fdfdfd", color = "#fdfdfd"),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(random, aes(x, y)) +
geom_bar(stat = "identity", color = "#fdfdfd") +
theme_minimal() +
theme(plot.background = element_rect(fill = "#fdfdfd", color = "#fdfdfd"),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(random, aes(x, y)) +
geom_bar(stat = "identity", color = "#EEEEEE") +
theme_minimal() +
theme(plot.background = element_rect(fill = "#EEEEEE", color = "#EEEEEE"),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
library(ggplot2)
random <- data.frame(x = 1:5, y = 5:1)
ggplot(random, aes(x, y)) +
geom_bar(stat = "identity", color = "#EEEEEE") +
theme_minimal() +
theme(plot.background = element_rect(fill = "#EEEEEE", color = "#EEEEEE"),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
?cor.test
