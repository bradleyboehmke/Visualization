{
    "collab_server" : "",
    "contents" : "library(xlsx)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(magrittr)\nlibrary(gridExtra)\n\n\n##################\n# Bar Chart icon #\n##################\n# basic bar chart for icon\nrandom <- data.frame(x = 1:5, y = 5:1)\nggplot(random, aes(x, y)) +\n        geom_bar(stat = \"identity\", color = \"#EEEEEE\") +\n        theme_minimal() +\n        theme(plot.background = element_rect(fill = \"#EEEEEE\", color = \"#EEEEEE\"),\n              axis.text = element_blank(),\n              axis.ticks = element_blank(),\n              axis.title = element_blank(),\n              panel.grid.major = element_blank(),\n              panel.grid.minor = element_blank())\n\n# basic bar chart for explanation\nggplot(random, aes(x, y)) +\n        geom_bar(stat = \"identity\", color = \"#fdfdfd\") +\n        theme_minimal() +\n        theme(plot.background = element_rect(fill = \"#fdfdfd\", color = \"#fdfdfd\"),\n              axis.text = element_blank(),\n              axis.ticks = element_blank(),\n              axis.title = element_blank(),\n              panel.grid.major = element_blank(),\n              panel.grid.minor = element_blank())\n\n\n# preset background color to my blogs background color\ntheme_update(plot.background = element_rect(fill = \"#fdfdfd\"))\n\n\n\n###################\n# Basic Bar Chart #\n###################\n\n# plot the count of categories in a variable\np1 <- ggplot(mtcars, aes(cyl)) +\n        geom_bar() +\n        ggtitle(\"x-axis as a continuous variable\")\n\np2 <- ggplot(mtcars, aes(factor(cyl))) +\n        geom_bar() +\n        ggtitle(\"x-axis as a categorical (factor) variable\")\n\ngrid.arrange(p1, p2, ncol = 2)\n\n# can adjust width of bars\np1 <- ggplot(mtcars, aes(factor(cyl))) +\n        geom_bar(width = .5) +\n        ggtitle(\"bar width = 0.5\")\n        \n\np2 <- ggplot(mtcars, aes(factor(cyl))) +\n        geom_bar(width = .75) +\n        ggtitle(\"bar width = 0.75\")\n\np3 <- ggplot(mtcars, aes(factor(cyl))) +\n        geom_bar(width = .9) +\n        ggtitle(\"bar width = 0.9\")\n\np4 <- ggplot(mtcars, aes(factor(cyl))) +\n        geom_bar(width = .99) +\n        ggtitle(\"bar width = 0.99\")\n\ngrid.arrange(p1, p2, p3, p4, ncol = 4)\n\n# adjust the fill and outline color\nggplot(mtcars, aes(factor(cyl))) +\n        geom_bar(fill = \"dodgerblue\", color = \"grey40\", alpha = .5)\n\n# plot the mpg for each car\nggplot(mtcars, aes(row.names(mtcars), mpg)) +\n        geom_bar(stat = \"identity\")\n\n# rotate to make more readable\nggplot(mtcars, aes(row.names(mtcars), mpg)) +\n        geom_bar(stat = \"identity\") +\n        coord_flip()\n\n# order bars\nggplot(mtcars, aes(reorder(row.names(mtcars), mpg), mpg)) +\n        geom_bar(stat = \"identity\") +\n        coord_flip()\n\n\n####################\n# Comparing Groups #\n####################\n\n# use color to compare groups\n# compare mpg across all cars and color based on cyl\nggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +\n        scale_fill_manual(values = c(\"#e5f5e0\", \"#a1d99b\", \"#31a354\")) +\n        geom_bar(stat = \"identity\") +\n        coord_flip() +\n        theme_minimal()\n\n\n# use side-by-side bars to compare groups\n# average mpg based on cyl and am\nlibrary(dplyr)\navg_mpg <- mtcars %>%\n        group_by(cyl, am) %>%\n        summarise(mpg = mean(mpg, na.rm = TRUE))\n\np1 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +\n        geom_bar(stat = \"identity\", position = \"dodge\") +\n        ggtitle(\"Default color comparison\")\n\n# more pleasing colors\np2 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +\n        geom_bar(stat = \"identity\", position = \"dodge\", color = \"grey40\") +\n        scale_fill_brewer(palette = \"Pastel1\") +\n        ggtitle(\"Adjusted color comparison\")\n\ngrid.arrange(p1, p2, ncol = 2)\n\n# adjust the dodge width\np1 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +\n        geom_bar(stat = \"identity\", position = \"dodge\") +\n        ggtitle(\"Default dodge positioning\") +\n        theme(legend.position = \"none\")\n\np2 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +\n        geom_bar(stat = \"identity\", position = position_dodge(width = .5)) +\n        ggtitle(\"Greater overlap of comparison bars\") +\n        theme(legend.position = \"none\")\n\np3 <- ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +\n        geom_bar(stat = \"identity\", position = position_dodge(width = 1)) +\n        ggtitle(\"Greater spacing between comparison bars\") +\n        labs(fill = \"AM\") +\n        theme(legend.position = c(1,1), legend.justification = c(1,1),\n              legend.background = element_blank())\n\ngrid.arrange(p1, p2, p3, ncol = 3)\n\n\n# use stacked bars to compare groups\n# when you fill by a categorical variable the default will create a stacked bar chart\nggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +\n        geom_bar(stat = \"identity\")\n\n# unfortunately the legend is opposite of stacked bars\nggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +\n        geom_bar(stat = \"identity\") +\n        guides(fill = guide_legend(reverse = TRUE))\n\n# or reverse stacking order by changing the factor levels\nggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am, levels = c(1, 0)))) +\n        geom_bar(stat = \"identity\") +\n        guides(fill = guide_legend(reverse = TRUE))\n\n# as before, we can change fill colors as desired\nggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am, levels = c(1, 0)))) +\n        geom_bar(stat = \"identity\", color = \"grey40\") +\n        scale_fill_manual(values = c(\"#a1d99b\", \"#31a354\")) +\n        labs(fill = \"AM\")\n\n# use proportional stacked bars to compare groups\n# proportional distribution of cars by cyl and am\nproportion <- mtcars %>%\n        group_by(cyl, am) %>%\n        tally() %>%\n        group_by(cyl) %>%\n        mutate(pct = n / sum(n))\n\nggplot(proportion, aes(factor(cyl), pct, fill = factor(am, levels = c(1, 0)))) +\n        geom_bar(stat = \"identity\", color = \"grey40\") +\n        scale_fill_manual(values = c(\"#a1d99b\", \"#31a354\")) +\n        labs(fill = \"AM\")\n\n\n#########################\n# Adding Labels/Markers #\n#########################\nggplot(mtcars, aes(reorder(row.names(mtcars), mpg), mpg)) +\n        geom_bar(stat = \"identity\") +\n        coord_flip() +\n        geom_text(aes(label = mpg), nudge_y = 1)\n\nggplot(mtcars, aes(reorder(row.names(mtcars), mpg), mpg)) +\n        geom_bar(stat = \"identity\") +\n        coord_flip() +\n        geom_text(aes(label = mpg), nudge_y = -1, color = \"white\")\n\n\n# highlight just one car and label\ncars <- mtcars %>%\n        mutate(Make = row.names(mtcars),\n               ID = ifelse(Make == \"Fiat X1-9\", TRUE, FALSE))\n\nggplot(cars, aes(reorder(Make, mpg), mpg, fill = ID)) +\n        geom_bar(stat = \"identity\") +\n        coord_flip() +\n        scale_fill_manual(values = c(\"grey90\", \"dodgerblue\")) +\n        annotate(\"text\", x = \"Fiat X1-9\", y = 24.5, label = \"mpg = 27.3\", color = \"white\") +\n        theme_minimal() +\n        theme(legend.position = \"none\")\n               \n# label grouped bars (vjust = .5 places labels just on top of bar)\nggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +\n        geom_bar(stat = \"identity\", position = \"dodge\") +\n        geom_text(aes(label = round(mpg, 1)), position = position_dodge(0.9),\n                  vjust = 1.5, color = \"white\")\n\n# label proportional bars\nproportion <- proportion %>%\n        group_by(cyl) %>%\n        mutate(label_y = cumsum(pct))\n\nggplot(proportion, aes(factor(cyl), pct, fill = factor(am, levels = c(1, 0)))) +\n        geom_bar(stat = \"identity\", color = \"grey40\") +\n        geom_text(aes(label = round(pct, 2), y = label_y), vjust = 1.5, color = \"white\") +\n        scale_fill_manual(values = c(\"#a1d99b\", \"#31a354\")) +\n        labs(fill = \"AM\")\n               \n#####################\n# Finishing Touches #\n#####################\nincome <- read.xlsx(\"Data/PEW Middle Class Data.xlsx\",\n                    sheetIndex = \"1. Distribution, metro\",\n                    startRow = 10, colIndex = c(1:4, 6:8)) %>%\n        set_colnames(c(\"Metro\", \"Lower_00\", \"Middle_00\", \"Upper_00\", \"Lower_14\",\n                       \"Middle_14\", \"Upper_14\")) %>%\n        filter(Metro != \"NA\")\n\nhead(income)\n\n# compare 2000 to 2014 for Dayton Ohio\ndayton <- income %>%\n        filter(Metro == \"Dayton, OH\") %>%\n        gather(metric, value, -Metro) %>%\n        separate(metric, into = c(\"class\", \"year\")) %>%\n        mutate(year = ifelse(year == \"00\", 2000, 2014),\n               value = value/100,\n               y_label = paste0(round(value*100, 1), \"%\"))\n\nggplot(dayton, aes(x = class, y = value, fill = factor(year))) +\n        geom_bar(stat = \"identity\", position = \"dodge\", color = \"grey40\") +\n        geom_text(aes(label = y_label), position = position_dodge(0.9), \n                      vjust = 1.5, color = \"white\", family = \"Georgia\") +\n        scale_fill_manual(values = c(\"#a1d99b\", \"#31a354\")) +\n        scale_y_continuous(labels = scales::percent) +\n        scale_x_discrete(labels = c(\"Lower\" = \"Lower Class\",\n                         \"Middle\" = \"Middle Class\", \"Upper\" = \"Upper Class\")) +\n        labs(title = \"Distribution of Adults by Income in Dayton, OH\",\n             subtitle = \"The percentage of adults in the middle class eroded by 5.3% from 2000 to 2014. Although a small \\nfraction of these individuals moved into the upper class (+0.5%), the majority of these middle class \\nindividuals moved into the lower income class (+4.8%).\",\n             caption = \"Source: Pew Research Center analysis of the \\n2000 decennial census and 2014 American \\nCommunity Survey (IPUMS)\") +\n        theme_minimal() +\n        theme(axis.title = element_blank(),\n              panel.grid.major.x = element_blank(),\n              panel.grid.minor = element_blank(),\n              legend.position = c(1,1), legend.justification = c(1,1),\n              legend.background = element_blank(),\n              legend.direction=\"horizontal\",\n              legend.title = element_blank(),\n              text = element_text(family = \"Georgia\"),\n              plot.title = element_text(size = 20, margin = margin(b = 10)),\n              plot.subtitle = element_text(size = 12, color = \"darkslategrey\", margin = margin(b = 25)),\n              plot.caption = element_text(size = 8, margin = margin(t = 10), color = \"grey70\", hjust = 0))\n        \n        \n\n\n\n               ",
    "created" : 1465088370342.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "572037677",
    "id" : "2C6BB152",
    "lastKnownWriteTime" : 1465300904,
    "last_content_update" : 1465300904753,
    "path" : "~/Desktop/Personal/Visualization/Barchart.R",
    "project_path" : "Barchart.R",
    "properties" : {
        "docOutlineVisible" : "0",
        "tempName" : "Untitled2"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}